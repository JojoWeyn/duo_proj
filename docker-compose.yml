services:
  gateway:
    build:
      dockerfile: Dockerfile
      context: ./gateway
    container_name: gateway
    env_file: .env
    ports:
      - "3211:3211"

  identity-service:
    build:
      dockerfile: Dockerfile
      context: ./identity-service
    container_name: identity-service
    env_file: .env
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - kafka
    networks:
      - pg_network

  user-service:
    build:
      dockerfile: Dockerfile
      context: ./user-service
    container_name: user-service
    env_file: .env
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - kafka
    networks:
      - pg_network
      - redis_network

  course-service:
    build:
      dockerfile: Dockerfile
      context: ./course-service
    container_name: course-service
    env_file: .env
    ports:
      - "8083:8083"
    depends_on:
      - postgres
      - kafka
    networks:
      - pg_network
      - redis_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - redis_network
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:17
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pg_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - pg_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    networks:
      - pg_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      AUTH_TYPE: DISABLED
    depends_on:
      - kafka
      - zookeeper
    networks:
      - pg_network

  admin-frontend:
    build:
      dockerfile: Dockerfile
      context: ./admin-frontend
    container_name: admin-frontend
    env_file: .env
    ports:
      - "5173:5173"
    depends_on:
      - postgres
    
volumes:
  redis_data:
    driver: local
  postgres_data:


networks:
  redis_network:
    driver: bridge
  pg_network:
    driver: bridge
